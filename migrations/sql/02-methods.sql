--liquibase formatted sql
-- ****************************************************
-- Create Table: methods
-- Author: lzbkl
-- Date: 17/05/2025
-- ****************************************************

CREATE TABLE methods (
    id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    problem_id BIGINT REFERENCES problems(id),
    name VARCHAR(255) NOT NULL,
    description TEXT NOT NULL,
    example TEXT NOT NULL,
    image_url VARCHAR(255)
);

INSERT INTO methods (problem_id, name, description, example, image_url)
VALUES (
    1,
    'Метод дихотомии',
    'Метод дихотомии — итеративный метод для нахождения корней функции.',
    'Основная идея метода заключается в последовательном делении отрезка, на котором ищется корень, пополам и выборе той половины, в которой находится корень. Пусть на отрезке \\[a, b\\] функция \\(f(x)\\) непрерывна и на концах отрезка принимает разные знаки: \\(f(a) \\cdot f(b) < 0\\), тогда по теореме Больцано-Коши на этом отрезке существует корень. Находим середину отрезка \\(c = \\frac{a + b}{2}\\) и сужаем отрезок так, чтобы на его концах функция принимала разные знаки: если \\(f(a) \\cdot f(c) < 0\\), то в качестве нового значения правого конца отрезка нужно взять \\(b = c\\), иначе \\(a = c\\). Далее деление отрезка повторяется до тех пор, пока длина отрезка не станет меньше заданной точности \\(|b-a| < \\varepsilon\\). Алгоритм всегда сходится, но его недостатком является большое число итераций: число итераций не зависит от функции, а только от длины отрезка. Число итераций можно вычислить по формуле \\(\\frac{b-a}{2^n} < \\varepsilon\\). Данный метод имеет линейную сходимость.',
    '/src/main/resources/photos/bisection_method.png'
);

INSERT INTO methods (problem_id, name, description, example, image_url)
VALUES (
    1,
    'Метод неподвижных хорд',
    'Метод неподвижных хорд — это итеративный метод для нахождения корней функции, в котором одна из точек остается фиксированной, а другая изменяется на каждом шаге.',
    'Основная идея метода заключается в использовании хорды, соединяющей две точки на графике функции, для приближения к корню. Зафиксируем начальное приближение \\( x_0 \\) и возьмем первое приближение \\( x_1 \\). Через точки с координатами \\((x_0, f(x_0))\\) и \\((x_1, f(x_1))\\) на графике функции проведем хорду. Точку пересечения хорды с осью абсцисс обозначим \\( x_2 \\). Далее проводим хорду через точки \\((x_0, f(x_0))\\) и \\((x_2, f(x_2))\\), пересечение этой хорды с осью абсцисс обозначим \\( x_3 \\) и т. д. Используя уравнение прямой линии, проходящей через две заданные точки, получаем формулу:
\\[ x_{n+1} = x_n - \\frac{f(x_n)(x_n - x_0)}{f(x_n) - f(x_0)} \\]
где \\( x_0 \\) — начальное приближение корня, \\( x_n \\) — текущее приближение корня, \\( f(x_n) \\) — значение функции в точке \\( x_n \\), а \\( f(x_0) \\) — значение функции в точке \\( x_0 \\).

Выбор начальных точек \\( x_0 \\) и \\( x_1 \\) для старта итеративного процесса осуществляется следующим образом:
Если \\( f''''(a) \\cdot f(a) \\geq 0 \\), то начальная точка \\( x_0 = a \\), иначе \\( x_1 = a \\). Если \\( f''''(b) \\cdot f(b) \\geq 0 \\), то начальная точка \\( x_0 = b \\), иначе \\( x_1 = b \\).

Метод неподвижных хорд не требует вычисления производных функции, что делает его простым в реализации и применимым к широкому классу функций.

Если \\( x_n \\) — очередное приближение, \\( \\xi \\) — корень уравнения, то требуемая точность \\( \\varepsilon \\) будет достигнута, если выполняется условие \\( |x_n - \\xi| \\leq \\varepsilon \\). Однако это условие нельзя использовать для окончания итерационного процесса, так как корень неизвестен. Разложим функцию по формуле Тейлора в окрестности приближения \\( x_n \\) и получим в разложении корень \\( \\xi \\):
\\[ 0 = f(\\xi) = f(x_n) + f''(c)(\\xi - x_n), \\quad c \\in [\\xi, x_n]. \\]
Отсюда:
\\[ \\xi - x_n = -\\frac{f(x_n)}{f''(c)}. \\]
Предположим, \\( |f''(x)| \\geq m > 0 \\) на отрезке \\[a, b\\], тогда:
\\[ |x_n - \\xi| \\leq \\frac{|f(x_n)|}{m}. \\]
Следовательно, оценка
\\[ \\frac{|f(x_n)|}{m} \\leq \\varepsilon \\]
может быть взята в качестве условия, обеспечивающего заданную точность.

Если оценка производной снизу \\( m \\) неизвестна, то используют эвристическое условие:
\\[ |x_{n} - x_{n+1}| \\leq \\varepsilon, \\]

которое, однако, не всегда обеспечивает заданную точность.',
    '/photos/fixed_chords.png'
);

INSERT INTO methods (problem_id, name, description, example, image_url)
VALUES (
    1,
    'Метод Ньютона',
    'Метод Ньютона — это итеративный метод для нахождения корней функции. Основная идея метода заключается в использовании касательной к графику функции в текущей точке для приближения к корню.',
    'Возьмем начальное приближение \\( x_0 \\) и проведем касательную к графику функции \\( f(x) \\) в этой точке. Точку пересечения касательной с осью абсцисс обозначим \\( x_1 \\). Затем проведем касательную к графику функции \\( f(x) \\) в точке \\( x_1 \\) и точку пересечения касательной с осью абсцисс обозначим \\( x_2 \\). Процесс повторяется. Формула для итерации метода Ньютона выглядит следующим образом:
\\[ x_{n+1} = x_n - \\frac{f(x_n)}{f''(x_n)} \\]
где \\( x_n \\) — текущее приближение корня, \\( f(x_n) \\) — значение функции в точке \\( x_n \\), а \\( f''(x_n) \\) — значение производной функции в точке \\( x_n \\).

Выбор начальной точки \\( x_0 \\) является критически важным шагом для успешного применения метода Ньютона. Неправильный выбор начальной точки может привести к расходимости метода или к нахождению неправильного корня. Основная идея заключается в том, чтобы выбрать точку, в которой функция и её производная имеют одинаковый знак. Выбор начальной точки \\( x_0 \\) для старта итеративного процесса осуществляется следующим образом: Если \\( f''''(a) \\cdot f(a) \\geq 0 \\), то начальная точка \\( x_0 = a \\). Если \\( f''''(b) \\cdot f(b) \\geq 0 \\), то начальная точка \\( x_0 = b \\).

Если \\( x_n \\) — очередное приближение, \\( \\xi \\) — корень уравнения, то требуемая точность \\( \\varepsilon \\) будет достигнута, если выполняется условие \\( |x_n - \\xi| \\leq \\varepsilon \\). Однако это условие нельзя использовать для окончания итерационного процесса, так как корень неизвестен. Разложим функцию по формуле Тейлора в окрестности приближения \\( x_n \\) и получим в разложении корень \\( \\xi \\):
\\[ 0 = f(\\xi) = f(x_n) + f''(c)(\\xi - x_n), \\quad c \\in [\\xi, x_n]. \\]
Отсюда:
\\[ \\xi - x_n = -\\frac{f(x_n)}{f''(c)}. \\]
Предположим, \\( |f''(x)| \\geq m > 0 \\) на отрезке \\[a, b\\], тогда:
\\[ |x_n - \\xi| \\leq \\frac{|f(x_n)|}{m}. \\]
Следовательно, оценка
\\[ \\frac{|f(x_n)|}{m} \\leq \\varepsilon \\]
может быть взята в качестве условия, обеспечивающего заданную точность.

Если оценка производной снизу \\( m \\) неизвестна, то используют эвристическое условие:
\\[ |x_{n} - x_{n+1}| \\leq \\varepsilon, \\]

которое, однако, не всегда обеспечивает заданную точность.',
    '/src/main/resources/photos/method_newton.png'
);

INSERT INTO methods (problem_id, name, description, example, image_url)
VALUES (
    1,
    'Метод подвижных хорд',
    'Метод подвижных хорд - это двухшаговый итеративный метод для нахождения корней функции, в котором используются две изменяющиеся точки для вычисления следующего приближения.',
    'Возьмем два начальных приближения \\( x_0 \\) и \\( x_1 \\). Через точки с координатами \\((x_0, f(x_0))\\) и \\((x_1, f(x_1))\\) на графике функции проведем хорду. Точку пересечения хорды с осью абсцисс обозначим \\( x_2 \\). Далее проводим хорду через точки \\((x_1, f(x_1))\\) и \\((x_2, f(x_2))\\), и пересечение этой хорды с осью абсцисс обозначим \\( x_3 \\). Используя уравнение прямой линии, проходящей через две заданные точки, получаем формулу:
\\[ x_{n+1} = x_n - \\frac{f(x_n)(x_n - x_{n-1})}{f(x_n) - f(x_{n-1})} \\]
где \\( x_{n-1} \\) — предыдущее приближение корня, \\( x_n \\) — текущее приближение корня, \\( f(x_n) \\) — значение функции в точке \\( x_n \\), а \\( f(x_{n-1}) \\) — значение функции в точке \\( x_{n-1} \\).

Выбор начальных точек \\( x_0 \\) и \\( x_1 \\) для старта итеративного процесса осуществляется следующим образом:
Если \\( f''''(a) \\cdot f(a) \\geq 0 \\), то начальная точка \\( x_0 = a \\), иначе \\( x_1 = a \\). Если \\( f''''(b) \\cdot f(b) \\geq 0 \\), то начальная точка \\( x_0 = b \\), иначе \\( x_1 = b \\).

Метод подвижных хорд не требует вычисления производных функции, что делает его простым в реализации и применимым к широкому классу функций.

Если \\( x_n \\) — очередное приближение, \\( \\xi \\) — корень уравнения, то требуемая точность \\( \\varepsilon \\) будет достигнута, если выполняется условие \\( |x_n - \\xi| \\leq \\varepsilon \\). Однако это условие нельзя использовать для окончания итерационного процесса, так как корень неизвестен. Разложим функцию по формуле Тейлора в окрестности приближения \\( x_n \\) и получим в разложении корень \\( \\xi \\):
\\[ 0 = f(\\xi) = f(x_n) + f''(c)(\\xi - x_n), \\quad c \\in [\\xi, x_n]. \\]
Отсюда:
\\[ \\xi - x_n = -\\frac{f(x_n)}{f''(c)}. \\]
Предположим, \\( |f''(x)| \\geq m > 0 \\) на отрезке \\[a, b\\], тогда:
\\[ |x_n - \\xi| \\leq \\frac{|f(x_n)|}{m}. \\]
Следовательно, оценка
\\[ \\frac{|f(x_n)|}{m} \\leq \\varepsilon \\]
может быть взята в качестве условия, обеспечивающего заданную точность.

Если оценка производной снизу \\( m \\) неизвестна, то используют эвристическое условие:
\\[ |x_{n} - x_{n+1}| \\leq \\varepsilon, \\]

которое, однако, не всегда обеспечивает заданную точность.',
    '/src/main/resources/photos/nofixed_chords.png'
);
